#!/usr/bin/bash

## general shorcuts and mnemonics
alias \
    nvh="cd ~/.config/nvim" \
    files="xdg-open" \
    kas="tmux kill-ses -a" \
    alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" \
    "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'
cht() { curl cheat.sh/$1; }
mkcd() { mkdir $1 && cd $1; }

# development-specific
qcr() { gcc $@ -o tmp.out && ./tmp.out ; rm tmp.out > /dev/null; };
p4u() { picocom -b 115200 "/dev/ttyUSB${1}"; }
alias \
    make="make -j$(($(nproc) - 2))" \
    p3="python3" \
    sven="source venv/bin/activate"

## vim/nvim
if command -v nvim &>/dev/null; then
    export EDITOR=nvim
    alias \
        bvim="/usr/bin/vim" \
        vi="nvim" \
        vim="nvim" \
        vimdiff="nvim -d"
elif command -v vim &>/dev/null; then
    export EDITOR=vim
    alias \
        vi="vim" \
        nvim="vim"
fi

## grep
alias grep='grep --color=auto' \
    fgrep='fgrep --color=auto' \
    egrep='egrep --color=auto'

## zoxide
command -v zoxide &> /dev/null && alias bcd="\cd" cd="z"

## git
qcom() {
    if [ -z "$1" ]; then
        git add . && git commit -m 'automated quick commit'
    else
        git add . && git commit -m "$1"
    fi
}


qcomp() { qcom "$@" && git push; };
alias gt="git status" \
    gp="git pul" \
    gd="git diff" \
	gr="git restore" \
    gg="git grep" \
    gcm="git commit" \
    gclean="git clean -fdx"


## apt
lill () {
  for prog in "${@}"; do
    if ! command -v "${prog}" &>/dev/null; then
      echo "Installing ${prog}"...
      sudo apt-get install -y "${prog}"
    fi
  done
}
alias apt="apt-get" \
    whichv="apt-cache policy" \
    auu="sudo apt update && sudo apt upgrade -y --allow-downgrades"

## rc editing shortcuts
alias \
    zshrc="${EDITOR} ~/.zshrc" \
    rezsh="source ~/.zshrc" \
    rebash="source ~/.bashrc" \
    bashrc="${EDITOR} ~/.bashrc" \
    aliasrc="${EDITOR} ~/.config/aliasrc" \

## extra utilities
alias \
    myip="curl ipinfo.io/ip" \
    untar="tar -zxvf" \
    mkd="mkdir -pv"



## bat
command -v bat &> /dev/null && \
    alias bcat="/usr/bin/\cat" \
        bathelp='bat --plain --language=help' \
        vat="bat" \
        pat="bat --style=plain" \
        cat="bat --style=changes" \
        sat="pat --paging=never" \
        aat="bat -A"
belp() { "$@" --help 2>&1 | bathelp; }

## exa/ls/lsd
alias bls="/usr/bin/ls"
if [[ $USE_LSD -eq 1 ]]; then
    alias \
        els="bls -hN --color=auto --group-directories-first" \
        ls="lsd --group-directories-first" \
        l="ls --icon never" \
        la='ls -a' \
        ll='ls -l' \
        lal='lal -al' \
        tree='exa --tree'
elif command -v exa &> /dev/null; then
    alias \
        els="bls -hN --color=auto --group-directories-first" \
        l='exa --group-directories-first' \
        ls="exa -F" \
        la='l -a' \
        ll='l -l' \
        lal='l -al' \
        tree='exa --tree'
else
    alias \
        l="ls -hN --color=auto --group-directories-first" \
        ls='l -CF' \
        la='l -A' \
        ll='l -l' \
        lal='l -Al'
fi
lsa() {
    echo $(pwd)$/$(ls $1)
}

## verbosity and colors settings
alias \
	silcp="/usr/bin/cp" \
    cp="cp -i" \
    procp="rsync --progress" \
	rsync="rsync -vrPlu" \
	smv="/usr/bin/mv" \
    mv="mv -iv" \
    srm="/usr/bin/rm" \
	bc="bc -ql" \
	ffmpeg="ffmpeg -hide_banner"

## rm
command -v trash &> /dev/null && \
    alias rm="trash" || \
    alias rm="rm -I" vrm="rm -Iv"

## colors and other conveniences for common programs
alias \
    diff="diff --color=auto" \
    ccat="highlight --out-format=ansi" \
    ip="ip -color=auto"


## recent additions I'm still uncertain of
# yt-dlp
alias yt="yt-dlp  -i -o '%(title)s.%(ext)s'" \
    yts="yt-dlp --embed-subs -i -o '%(title)s.%(ext)s'" \
    yta="yt -x -f bestaudio/best --audio-format mp4" \
    yt480="yt -f 'bv*[height<=480]+ba/b[height<=480] / wv*+ba/w'" \
    yt720="yt -f 'bv*[height<=720]+ba/b[height<=720] / wv*+ba/w'" \
    yt1080="yt -f 'bv*[height<=1080]+ba/b[height<=1080] / wv*+ba/w'"

# need extra testing
vim_lock () {
  ls /usr/local/share/kbd/keymaps/caps_to_esc &> /dev/null || \
    sudo mkdir -p /usr/local/share/kbd/keymaps/ && \
    sudo dumpkeys > /usr/local/share/kbd/keymaps/default && \
    sudo touch /usr/local/share/kbd/keymaps/caps_to_esc && \
    echo -e "keycode 1 = Caps_Lock \nkeycode 58 = Escape" \
      | sudo tee -a /usr/local/share/kbd/keymaps/caps_to_esc > /dev/null

    sudo loadkeys /usr/local/share/kbd/keymaps/caps_to_esc
}
alias vim_unlock="sudo loadkeys /usr/local/share/kbd/keymaps/default"
